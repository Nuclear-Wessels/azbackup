// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: azbackup_proto.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Azbackup.Proto {

  /// <summary>Holder for reflection information generated from azbackup_proto.proto</summary>
  public static partial class AzbackupProtoReflection {

    #region Descriptor
    /// <summary>File descriptor for azbackup_proto.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AzbackupProtoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRhemJhY2t1cF9wcm90by5wcm90bxIOYXpiYWNrdXAucHJvdG8ipgEKCEZp",
            "bGVJbmZvEhAKCGZpbGVuYW1lGAEgASgJEhkKEWxhc3RXcml0ZVVUQ1RpY2tz",
            "GAIgASgDEjkKC3N0b3JhZ2VUaWVyGAMgASgOMiQuYXpiYWNrdXAucHJvdG8u",
            "RmlsZUluZm8uU3RvcmFnZVRpZXISCwoDbWQ1GAQgASgMIiUKC1N0b3JhZ2VU",
            "aWVyEgsKB0FyY2hpdmUQABIJCgVEZWx0YRABIkkKB0RpckluZm8SEQoJZGly",
            "ZWN0b3J5GAEgASgJEisKCWZpbGVJbmZvcxgCIAMoCzIYLmF6YmFja3VwLnBy",
            "b3RvLkZpbGVJbmZvIjYKCkNhY2hlQmxvY2sSKAoHZGlySW5mbxgBIAEoCzIX",
            "LmF6YmFja3VwLnByb3RvLkRpckluZm9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Azbackup.Proto.FileInfo), global::Azbackup.Proto.FileInfo.Parser, new[]{ "Filename", "LastWriteUTCTicks", "StorageTier", "Md5" }, null, new[]{ typeof(global::Azbackup.Proto.FileInfo.Types.StorageTier) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Azbackup.Proto.DirInfo), global::Azbackup.Proto.DirInfo.Parser, new[]{ "Directory", "FileInfos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Azbackup.Proto.CacheBlock), global::Azbackup.Proto.CacheBlock.Parser, new[]{ "DirInfo" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FileInfo : pb::IMessage<FileInfo> {
    private static readonly pb::MessageParser<FileInfo> _parser = new pb::MessageParser<FileInfo>(() => new FileInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Azbackup.Proto.AzbackupProtoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileInfo(FileInfo other) : this() {
      filename_ = other.filename_;
      lastWriteUTCTicks_ = other.lastWriteUTCTicks_;
      storageTier_ = other.storageTier_;
      md5_ = other.md5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileInfo Clone() {
      return new FileInfo(this);
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 1;
    private string filename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filename {
      get { return filename_; }
      set {
        filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastWriteUTCTicks" field.</summary>
    public const int LastWriteUTCTicksFieldNumber = 2;
    private long lastWriteUTCTicks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastWriteUTCTicks {
      get { return lastWriteUTCTicks_; }
      set {
        lastWriteUTCTicks_ = value;
      }
    }

    /// <summary>Field number for the "storageTier" field.</summary>
    public const int StorageTierFieldNumber = 3;
    private global::Azbackup.Proto.FileInfo.Types.StorageTier storageTier_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Azbackup.Proto.FileInfo.Types.StorageTier StorageTier {
      get { return storageTier_; }
      set {
        storageTier_ = value;
      }
    }

    /// <summary>Field number for the "md5" field.</summary>
    public const int Md5FieldNumber = 4;
    private pb::ByteString md5_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Md5 {
      get { return md5_; }
      set {
        md5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filename != other.Filename) return false;
      if (LastWriteUTCTicks != other.LastWriteUTCTicks) return false;
      if (StorageTier != other.StorageTier) return false;
      if (Md5 != other.Md5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Filename.Length != 0) hash ^= Filename.GetHashCode();
      if (LastWriteUTCTicks != 0L) hash ^= LastWriteUTCTicks.GetHashCode();
      if (StorageTier != 0) hash ^= StorageTier.GetHashCode();
      if (Md5.Length != 0) hash ^= Md5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Filename.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filename);
      }
      if (LastWriteUTCTicks != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LastWriteUTCTicks);
      }
      if (StorageTier != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) StorageTier);
      }
      if (Md5.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Md5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Filename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
      }
      if (LastWriteUTCTicks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastWriteUTCTicks);
      }
      if (StorageTier != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StorageTier);
      }
      if (Md5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Md5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileInfo other) {
      if (other == null) {
        return;
      }
      if (other.Filename.Length != 0) {
        Filename = other.Filename;
      }
      if (other.LastWriteUTCTicks != 0L) {
        LastWriteUTCTicks = other.LastWriteUTCTicks;
      }
      if (other.StorageTier != 0) {
        StorageTier = other.StorageTier;
      }
      if (other.Md5.Length != 0) {
        Md5 = other.Md5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filename = input.ReadString();
            break;
          }
          case 16: {
            LastWriteUTCTicks = input.ReadInt64();
            break;
          }
          case 24: {
            storageTier_ = (global::Azbackup.Proto.FileInfo.Types.StorageTier) input.ReadEnum();
            break;
          }
          case 34: {
            Md5 = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FileInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum StorageTier {
        [pbr::OriginalName("Archive")] Archive = 0,
        [pbr::OriginalName("Delta")] Delta = 1,
      }

    }
    #endregion

  }

  public sealed partial class DirInfo : pb::IMessage<DirInfo> {
    private static readonly pb::MessageParser<DirInfo> _parser = new pb::MessageParser<DirInfo>(() => new DirInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DirInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Azbackup.Proto.AzbackupProtoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirInfo(DirInfo other) : this() {
      directory_ = other.directory_;
      fileInfos_ = other.fileInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirInfo Clone() {
      return new DirInfo(this);
    }

    /// <summary>Field number for the "directory" field.</summary>
    public const int DirectoryFieldNumber = 1;
    private string directory_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Directory {
      get { return directory_; }
      set {
        directory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fileInfos" field.</summary>
    public const int FileInfosFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Azbackup.Proto.FileInfo> _repeated_fileInfos_codec
        = pb::FieldCodec.ForMessage(18, global::Azbackup.Proto.FileInfo.Parser);
    private readonly pbc::RepeatedField<global::Azbackup.Proto.FileInfo> fileInfos_ = new pbc::RepeatedField<global::Azbackup.Proto.FileInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Azbackup.Proto.FileInfo> FileInfos {
      get { return fileInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DirInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DirInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Directory != other.Directory) return false;
      if(!fileInfos_.Equals(other.fileInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Directory.Length != 0) hash ^= Directory.GetHashCode();
      hash ^= fileInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Directory.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Directory);
      }
      fileInfos_.WriteTo(output, _repeated_fileInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Directory.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Directory);
      }
      size += fileInfos_.CalculateSize(_repeated_fileInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DirInfo other) {
      if (other == null) {
        return;
      }
      if (other.Directory.Length != 0) {
        Directory = other.Directory;
      }
      fileInfos_.Add(other.fileInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Directory = input.ReadString();
            break;
          }
          case 18: {
            fileInfos_.AddEntriesFrom(input, _repeated_fileInfos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CacheBlock : pb::IMessage<CacheBlock> {
    private static readonly pb::MessageParser<CacheBlock> _parser = new pb::MessageParser<CacheBlock>(() => new CacheBlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CacheBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Azbackup.Proto.AzbackupProtoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CacheBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CacheBlock(CacheBlock other) : this() {
      DirInfo = other.dirInfo_ != null ? other.DirInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CacheBlock Clone() {
      return new CacheBlock(this);
    }

    /// <summary>Field number for the "dirInfo" field.</summary>
    public const int DirInfoFieldNumber = 1;
    private global::Azbackup.Proto.DirInfo dirInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Azbackup.Proto.DirInfo DirInfo {
      get { return dirInfo_; }
      set {
        dirInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CacheBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CacheBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DirInfo, other.DirInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dirInfo_ != null) hash ^= DirInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dirInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DirInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dirInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DirInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CacheBlock other) {
      if (other == null) {
        return;
      }
      if (other.dirInfo_ != null) {
        if (dirInfo_ == null) {
          dirInfo_ = new global::Azbackup.Proto.DirInfo();
        }
        DirInfo.MergeFrom(other.DirInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dirInfo_ == null) {
              dirInfo_ = new global::Azbackup.Proto.DirInfo();
            }
            input.ReadMessage(dirInfo_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
